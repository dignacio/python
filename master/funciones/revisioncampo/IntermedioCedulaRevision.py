# -*- coding: utf-8 -*-
"""
/***************************************************************************
 IntermedioCedulaRevision
                                 A QGIS plugin
 IntermedioCedulaRevision
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2018-06-22
        git sha              : $Format:%H$
        copyright            : (C) 2018 by IntermedioCedulaRevision
        email                : IntermedioCedulaRevision
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from PyQt5.QtCore import QSettings, QTranslator, qVersion, QCoreApplication
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QAction
from PyQt5 import QtWidgets

# Initialize Qt resources from file resources.py

# Import the code for the dialog
from .IntermedioCedulaRevision_dialog import IntermedioCedulaRevisionDialog
from .CedulaPadron import CedulaPadron
import os.path


class IntermedioCedulaRevision:
    """QGIS Plugin Implementation."""

    def __init__(self, iface, pluginM, tipo):

        # Save reference to the QGIS interface
        self.iface = iface
        self.tipo = tipo
        self.pluginM = pluginM
        self.dlg = IntermedioCedulaRevisionDialog()

        self.dlg.tablaClaves.doubleClicked.connect(self.abrirCedula)
        self.dlg.tablaClaves.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)

        self.cedulaPadron = CedulaPadron(iface, self)

        self.cveCatastral = ''

    def run(self):
        """Run method that performs all the real work"""
        # show the dialog
        self.pluginM.UTI.strechtTabla(self.dlg.tablaClaves)
        self.dlg.show()
        

    def abrirCedula(self):
        
        seleccion = sorted(set(index.row() for index in self.dlg.tablaClaves.selectedIndexes()))[0]
        self.cveCatastral = str(self.dlg.tablaClaves.item(seleccion,0).text())

        if self.tipo == 'PAD':
            self.cedulaPadron.run(self.cveCatastral)